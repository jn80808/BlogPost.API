// <auto-generated />
using System;
using BlogPostSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogPost.API.Migrations
{
    [DbContext(typeof(BlogPostDbContext))]
    [Migration("20250415135223_Fix BlogPostT Category Relationship")]
    partial class FixBlogPostTCategoryRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlogCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.ToTable("BlogCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7836b51f-95e3-43d1-9abf-4aca96017328"),
                            Description = "Latest tech trends and news",
                            Name = "Technology",
                            UrlHandle = "technology"
                        },
                        new
                        {
                            Id = new Guid("4f118e0f-c6d4-449b-9e61-6f5e38df43ec"),
                            Description = "Health, wellness, and daily life tips",
                            Name = "Lifestyle",
                            UrlHandle = "lifestyle"
                        },
                        new
                        {
                            Id = new Guid("a005d85e-d25c-470d-a841-67a422ab3608"),
                            Description = "Money management and investment advice",
                            Name = "Finance",
                            UrlHandle = "finance"
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BlogPostTId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeatureImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostTId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogPostT");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eaf65822-e4c5-49d1-92ee-48945d12558e"),
                            AuthorName = "John Doe",
                            CategoryId = new Guid("7836b51f-95e3-43d1-9abf-4aca96017328"),
                            Content = "AI is evolving rapidly...",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4558),
                            FeatureImageUrl = "ai.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4552),
                            ShortDescription = "Exploring AI advancements",
                            Title = "The Future of AI",
                            UrlHandle = "future-of-ai"
                        },
                        new
                        {
                            Id = new Guid("e940637e-ec9a-43f2-8766-8f8eb78c7b8c"),
                            AuthorName = "Jane Smith",
                            CategoryId = new Guid("4f118e0f-c6d4-449b-9e61-6f5e38df43ec"),
                            Content = "Here are some productivity hacks...",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4564),
                            FeatureImageUrl = "productivity.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4563),
                            ShortDescription = "Increase your efficiency",
                            Title = "Best Productivity Hacks",
                            UrlHandle = "best-productivity-hacks"
                        },
                        new
                        {
                            Id = new Guid("c7cd6a9d-f860-4508-865b-026faf8cf0cc"),
                            AuthorName = "Mark Brown",
                            CategoryId = new Guid("a005d85e-d25c-470d-a841-67a422ab3608"),
                            Content = "Managing your finances is important...",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4569),
                            FeatureImageUrl = "finance.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4567),
                            ShortDescription = "Smart saving tips",
                            Title = "How to Save Money",
                            UrlHandle = "how-to-save-money"
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BlogPostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5eebe1e3-9ec8-4b63-b79b-868afd7b2bec"),
                            AuthorName = "Alice",
                            BlogPostId = new Guid("eaf65822-e4c5-49d1-92ee-48945d12558e"),
                            Content = "Great insights on AI!",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4598)
                        },
                        new
                        {
                            Id = new Guid("af5285e6-ca70-410d-bced-4c764000e980"),
                            AuthorName = "Bob",
                            BlogPostId = new Guid("e940637e-ec9a-43f2-8766-8f8eb78c7b8c"),
                            Content = "These hacks really helped!",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4603)
                        },
                        new
                        {
                            Id = new Guid("3267a5b6-4fdc-4f3b-ab99-2b6b6c920d68"),
                            AuthorName = "Charlie",
                            BlogPostId = new Guid("c7cd6a9d-f860-4508-865b-026faf8cf0cc"),
                            Content = "Thanks for the tips!",
                            CreatedAt = new DateTime(2025, 4, 15, 13, 52, 22, 904, DateTimeKind.Utc).AddTicks(4605)
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogCategory", b =>
                {
                    b.HasOne("BlogPost.API.Model.Domain.BlogCategory", null)
                        .WithMany("Categories")
                        .HasForeignKey("BlogCategoryId");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.HasOne("BlogPost.API.Model.Domain.BlogPostT", null)
                        .WithMany("BlogPost")
                        .HasForeignKey("BlogPostTId");

                    b.HasOne("BlogPost.API.Model.Domain.BlogCategory", "Category")
                        .WithMany("BlogPosts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.Comment", b =>
                {
                    b.HasOne("BlogPost.API.Model.Domain.BlogPostT", "BlogPost")
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogCategory", b =>
                {
                    b.Navigation("BlogPosts");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.Navigation("BlogPost");

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
