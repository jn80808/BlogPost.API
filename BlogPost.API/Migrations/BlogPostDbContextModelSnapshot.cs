// <auto-generated />
using System;
using BlogPostSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogPost.API.Migrations
{
    [DbContext(typeof(BlogPostDbContext))]
    partial class BlogPostDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86a59b54-90ce-46d9-982e-23635ae8f876"),
                            Description = "Latest tech trends and news",
                            Name = "Technology",
                            UrlHandle = "technology"
                        },
                        new
                        {
                            Id = new Guid("dbed4bcf-5ea0-4578-bde7-26ee4285ff2a"),
                            Description = "Health, wellness, and daily life tips",
                            Name = "Lifestyle",
                            UrlHandle = "lifestyle"
                        },
                        new
                        {
                            Id = new Guid("68b08ae7-8c0e-45de-b9e0-655a33ca91a0"),
                            Description = "Money management and investment advice",
                            Name = "Finance",
                            UrlHandle = "finance"
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeatureImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogPostT");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68e553ab-5417-4e80-b7a0-7c168423e0dc"),
                            AuthorName = "John Doe",
                            CategoryId = new Guid("86a59b54-90ce-46d9-982e-23635ae8f876"),
                            Content = "AI is evolving rapidly...",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3019),
                            FeatureImageUrl = "ai.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3014),
                            ShortDescription = "Exploring AI advancements",
                            Title = "The Future of AI",
                            UrlHandle = "future-of-ai"
                        },
                        new
                        {
                            Id = new Guid("6596baae-f88f-487c-8b2a-3e31f997626e"),
                            AuthorName = "Jane Smith",
                            CategoryId = new Guid("dbed4bcf-5ea0-4578-bde7-26ee4285ff2a"),
                            Content = "Here are some productivity hacks...",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3026),
                            FeatureImageUrl = "productivity.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3024),
                            ShortDescription = "Increase your efficiency",
                            Title = "Best Productivity Hacks",
                            UrlHandle = "best-productivity-hacks"
                        },
                        new
                        {
                            Id = new Guid("84ec1dfb-fb78-4df1-8c3c-0ec0b92042d5"),
                            AuthorName = "Mark Brown",
                            CategoryId = new Guid("68b08ae7-8c0e-45de-b9e0-655a33ca91a0"),
                            Content = "Managing your finances is important...",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3043),
                            FeatureImageUrl = "finance.jpg",
                            IsPublished = true,
                            IsVisible = true,
                            PublishedDate = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3042),
                            ShortDescription = "Smart saving tips",
                            Title = "How to Save Money",
                            UrlHandle = "how-to-save-money"
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BlogPostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18ffc619-9e42-43dc-8538-d1ca22f89fc5"),
                            AuthorName = "Alice",
                            BlogPostId = new Guid("68e553ab-5417-4e80-b7a0-7c168423e0dc"),
                            Content = "Great insights on AI!",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3077)
                        },
                        new
                        {
                            Id = new Guid("a20c9199-8e52-4698-85da-3d328959efa9"),
                            AuthorName = "Bob",
                            BlogPostId = new Guid("6596baae-f88f-487c-8b2a-3e31f997626e"),
                            Content = "These hacks really helped!",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3082)
                        },
                        new
                        {
                            Id = new Guid("4c74cb5f-f619-4896-a8f7-147d46cdd7b8"),
                            AuthorName = "Charlie",
                            BlogPostId = new Guid("84ec1dfb-fb78-4df1-8c3c-0ec0b92042d5"),
                            Content = "Thanks for the tips!",
                            CreatedAt = new DateTime(2025, 2, 24, 13, 46, 46, 219, DateTimeKind.Utc).AddTicks(3085)
                        });
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.HasOne("BlogPost.API.Model.Domain.BlogCategory", "Category")
                        .WithMany("BlogPosts")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.Comment", b =>
                {
                    b.HasOne("BlogPost.API.Model.Domain.BlogPostT", "BlogPost")
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogCategory", b =>
                {
                    b.Navigation("BlogPosts");
                });

            modelBuilder.Entity("BlogPost.API.Model.Domain.BlogPostT", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
